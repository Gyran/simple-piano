// https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Simple_synth#creating_the_note_table
const BaseNotesTable = new Map([
  ['A0', 27.5],
  ['A#0', 29.13524],
  ['B0', 30.86771],

  ['C1', 32.703195662574829],
  ['C#1', 34.647828872109012],
  ['D1', 36.708095989675945],
  ['D#1', 38.890872965260113],
  ['E1', 41.203444614108741],
  ['F1', 43.653528929125485],
  ['F#1', 46.249302838954299],
  ['G1', 48.999429497718661],
  ['G#1', 51.913087197493142],
  ['A1', 55.0],
  ['A#1', 58.270470189761239],
  ['B1', 61.735412657015513],

  ['C2', 65.406391325149658],
  ['C#2', 69.295657744218024],
  ['D2', 73.41619197935189],
  ['D#2', 77.781745930520227],
  ['E2', 82.406889228217482],
  ['F2', 87.307057858250971],
  ['F#2', 92.498605677908599],
  ['G2', 97.998858995437323],
  ['G#2', 103.826174394986284],
  ['A2', 110.0],
  ['A#2', 116.540940379522479],
  ['B2', 123.470825314031027],

  ['C3', 130.812782650299317],
  ['C#3', 138.591315488436048],
  ['D3', 146.83238395870378],
  ['D#3', 155.563491861040455],
  ['E3', 164.813778456434964],
  ['F3', 174.614115716501942],
  ['F#3', 184.997211355817199],
  ['G3', 195.997717990874647],
  ['G#3', 207.652348789972569],
  ['A3', 220.0],
  ['A#3', 233.081880759044958],
  ['B3', 246.941650628062055],

  ['C4', 261.625565300598634],
  ['C#4', 277.182630976872096],
  ['D4', 293.66476791740756],
  ['D#4', 311.12698372208091],
  ['E4', 329.627556912869929],
  ['F4', 349.228231433003884],
  ['F#4', 369.994422711634398],
  ['G4', 391.995435981749294],
  ['G#4', 415.304697579945138],
  ['A4', 440.0],
  ['A#4', 466.163761518089916],
  ['B4', 493.883301256124111],

  ['C5', 523.251130601197269],
  ['C#5', 554.365261953744192],
  ['D5', 587.32953583481512],
  ['D#5', 622.253967444161821],
  ['E5', 659.255113825739859],
  ['F5', 698.456462866007768],
  ['F#5', 739.988845423268797],
  ['G5', 783.990871963498588],
  ['G#5', 830.609395159890277],
  ['A5', 880.0],
  ['A#5', 932.327523036179832],
  ['B5', 987.766602512248223],

  ['C6', 1046.502261202394538],
  ['C#6', 1108.730523907488384],
  ['D6', 1174.659071669630241],
  ['D#6', 1244.507934888323642],
  ['E6', 1318.510227651479718],
  ['F6', 1396.912925732015537],
  ['F#6', 1479.977690846537595],
  ['G6', 1567.981743926997176],
  ['G#6', 1661.218790319780554],
  ['A6', 1760.0],
  ['A#6', 1864.655046072359665],
  ['B6', 1975.533205024496447],

  ['C7', 2093.004522404789077],
  ['C#7', 2217.461047814976769],
  ['D7', 2349.318143339260482],
  ['D#7', 2489.015869776647285],
  ['E7', 2637.020455302959437],
  ['F7', 2793.825851464031075],
  ['F#7', 2959.955381693075191],
  ['G7', 3135.963487853994352],
  ['G#7', 3322.437580639561108],
  ['A7', 3520.0],
  ['A#7', 3729.310092144719331],
  ['B7', 3951.066410048992894],

  ['C8', 4186.009044809578154],
]);

const createPiano = (audioContext) => {
  const OscMap = new Map();

  const mainGainNode = audioContext.createGain();
  mainGainNode.connect(audioContext.destination);
  mainGainNode.gain.value = 1;

  const playNote = (note) => {
    if (OscMap.has(note)) {
      return;
    }

    const frequency = BaseNotesTable.get(note);

    if (!frequency) {
      throw new Error(`Invalid note ${note}`);
    }
    const o = audioContext.createOscillator();
    const g = audioContext.createGain();
    // g.gain.value = 0.0001;

    o.frequency.value = frequency;
    o.connect(g);
    g.connect(mainGainNode);

    OscMap.set(note, { o, g });

    // g.gain.exponentialRampToValueAtTime(1, audioContext.currentTime + 0.2);
    o.start(0);
  };

  const stopNote = (note, stopTimeSec = 1) => {
    const nodes = OscMap.get(note);
    if (nodes) {
      OscMap.delete(note);
      nodes.g.gain.exponentialRampToValueAtTime(
        0.0001,
        audioContext.currentTime + stopTimeSec,
      );

      setTimeout(() => {
        nodes.o.stop();
        nodes.g.disconnect();
        nodes.o.disconnect();
      }, stopTimeSec * 1000);
    }
  };

  return {
    playNote,
    stopNote,
  };
};

export default createPiano;
